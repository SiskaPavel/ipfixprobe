name: prepare

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  build_docker_image:
    strategy:
      matrix:
        os: [oraclelinux-9, oraclelinux-8, rockylinux-8]
    steps:
      - name: IMAGE OS info
        run: echo ${{ matrix.os }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.DOCKER_LOGIN }}
      - name: Extract metadata (tags, labels) for Docker
        run: |
          IFS=- read -r OS_NAME OS_TAG <<< ${{ matrix.os }}
          echo "${{ matrix.os }}_OS_NAME=$OS_NAME" >>${GITHUB_ENV}
          echo "${{ matrix.os }}_OS_TAG=$OS_TAG" >>${GITHUB_ENV}
      - name: env VALUE
        run: |
          ENV_NAME = env.${{ matrix.os }}_OS_NAME
          echo ${{ ENV_NAME }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
              OS_DISTRO=oraclelinux
              OS_RELEASE=9
          push: true
          tags: ghcr.io/siskapavel/oraclelinux:ol9
          cache-from: type=gha
          cache-to: type=gha,mode=max
    runs-on: ubuntu-latest
         
  docker-image-ol9: 
    runs-on: ubuntu-latest
    steps:
    - name: set lower case owner name
      run: |
        echo "ACTOR_LC=${OWNER,,}" >>${GITHUB_ENV}
      env:
        OWNER: '${{ github.actor }}'
    - uses: actions/checkout@v4
    - name: basic info
      run: |
        echo ${{ ENV.ACTOR_LC }}
        echo ${{ github.repository }}
        echo ${{ github.actor }}  
        echo ${{ steps.meta.outputs.tags }}
        echo ${{ steps.meta.outputs.labels }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_LOGIN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: 
          ghcr.io/${{ github.actor }}/oraclelinux:ol9
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/Dockerfile
        build-args: |
            OS_DISTRO=oraclelinux
            OS_RELEASE=9
        push: true
        tags: ghcr.io/siskapavel/oraclelinux:ol9
        cache-from: type=gha
        cache-to: type=gha,mode=max



  test_stage:
      runs-on: ubuntu-latest
      needs: docker-image-ol9
      container:
        image: ghcr.io/siskapavel/oraclelinux:ol9
      steps:
      - uses: actions/checkout@v3
      - name: Check clang-format
        run: find . -type f -regextype posix-egrep -regex '.*.(hpp|cpp)$' -print0 | xargs -0 clang-format --dry-run --Werror --style=file
  build_stage:
      runs-on: ubuntu-latest
      needs: test_stage
      container:
        image: ghcr.io/siskapavel/oraclelinux:ol9
      steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: autoreconf
        run: autoreconf -i
      - name: configure
        run: ./configure --with-raw --with-pcap
      - name: make
        run: make
      - name: make rpm
        run: make rpm



